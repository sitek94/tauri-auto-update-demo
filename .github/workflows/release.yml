name: Release

on:
  push:
    # TODO: on release
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Build Frontend
        run: bun frontend:build

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build Tauri
        run: bun tauri:build --target ${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: artifacts-${{ matrix.arch }}
          path: |
            ./src-tauri/target/${{ matrix.target }}/release/bundle/dmg/**.dmg
            ./src-tauri/target/${{ matrix.target }}/release/bundle/macos/**.app.*

  # release:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set version number
  #       run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

  #     - name: Download aarch64 artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: artifacts-aarch64
  #         path: artifacts/aarch64

  #     - name: Rename artifacts
  #       run: |
  #         mv "artifacts/aarch64/dmg/demo_${{ env.version }}_aarch64.dmg" "artifacts/demo_${{ env.version }}_macos_aarch64.dmg"
  #         mv "artifacts/aarch64/macos/demo.app.tar.gz" "artifacts/demo_${{ env.version }}_macos_aarch64.app.tar.gz"
  #         mv "artifacts/aarch64/macos/demo.app.tar.gz.sig" "artifacts/demo_${{ env.version }}_macos_aarch64.app.tar.gz.sig"

  #     - name: Create Release
  #       uses: softprops/action-gh-release@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: v${{ env.version }}
  #         name: Tauri Demo v${{ env.version }}
  #         body: See the assets to download this version and install.
  #         prerelease: false
  #         generate_release_notes: false
  #         files: ./artifacts/**/*

  # publish-updater-file:
  #   runs-on: ubuntu-latest
  #   needs: release

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: pnpm/action-setup@v2
  #       name: Install pnpm
  #       id: pnpm-install
  #       with:
  #         version: 8.8.0
  #         run_install: false

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: pnpm
  #     - run: pnpm install --frozen-lockfile

  #     - name: Updater JSON
  #       run: pnpm updater --token=${{ secrets.GITHUB_TOKEN }}

  #     - name: Deploy install.json
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./updater
